"""
Django settings for therapy_management project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config, Csv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-wf4f&=et8=bcs*wl@wo!u*^o7l7d6-@+#cn%*_52yy@etiz#mi')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1', cast=Csv())


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'drf_yasg',
    'corsheaders',
    'accounts',
    'therapists',
    'clients',
    'sessions',
    'companies',
    'payments',
    'coupons',
    'communications',
    'grievances',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'therapy_management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'therapy_management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config('DB_ENGINE', default='django.db.backends.postgresql'),
        'NAME': config('DB_NAME', default='therapy_management'),
        'USER': config('DB_USER', default='postgres'),
        'PASSWORD': config('DB_PASSWORD', default='password'),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('DB_PORT', default='5432'),
        'CONN_MAX_AGE': config('DB_CONN_MAX_AGE', default=600, cast=int),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = config('LANGUAGE_CODE', default='en-us')

TIME_ZONE = config('TIME_ZONE', default='Asia/Kolkata')

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = config('STATIC_URL', default='/static/')
STATIC_ROOT = BASE_DIR / config('STATIC_ROOT', default='staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'accounts.User'

# REST Framework Configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
}

# Swagger/OpenAPI Configuration
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
            'description': 'Token-based authentication with required prefix "Token"'
        },
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
            'description': 'JWT authentication with required prefix "Bearer"'
        }
    },
    'USE_SESSION_AUTH': True,
    'JSON_EDITOR': True,
    'SUPPORTED_SUBMIT_METHODS': [
        'get',
        'post',
        'put',
        'delete',
        'patch'
    ],
    'OPERATIONS_SORTER': 'alpha',
    'TAGS_SORTER': 'alpha',
    'DOC_EXPANSION': 'none',
    'DEEP_LINKING': True,
    'SHOW_EXTENSIONS': True,
    'DEFAULT_MODEL_RENDERING': 'model',
}

REDOC_SETTINGS = {
    'LAZY_RENDERING': False,
    'HIDE_HOSTNAME': False,
    'EXPAND_RESPONSES': 'all',
    'PATH_IN_MIDDLE': True,
}

# CORS Settings
CORS_ALLOWED_ORIGINS = config('CORS_ALLOWED_ORIGINS', default='http://localhost:3000,http://127.0.0.1:3000', cast=Csv())
CORS_ALLOW_CREDENTIALS = config('CORS_ALLOW_CREDENTIALS', default=True, cast=bool)

# CSRF Settings
CSRF_TRUSTED_ORIGINS = config('CSRF_TRUSTED_ORIGINS', default='http://localhost:3000,http://127.0.0.1:3000', cast=Csv())

# Media Files
MEDIA_URL = config('MEDIA_URL', default='/media/')
MEDIA_ROOT = BASE_DIR / config('MEDIA_ROOT', default='media')

# File Upload Settings
FILE_UPLOAD_MAX_MEMORY_SIZE = config('FILE_UPLOAD_MAX_MEMORY_SIZE', default=10485760, cast=int)  # 10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = config('DATA_UPLOAD_MAX_MEMORY_SIZE', default=10485760, cast=int)  # 10MB

# Email Configuration
EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.smtp.EmailBackend')
EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='your-email@gmail.com')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='your-app-password')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='AmitaCare Therapy Platform <your-email@gmail.com>')

# Payment Gateway Configuration
RAZORPAY_KEY_ID = config('RAZORPAY_KEY_ID', default='your-razorpay-key-id')
RAZORPAY_KEY_SECRET = config('RAZORPAY_KEY_SECRET', default='your-razorpay-key-secret')
RAZORPAY_WEBHOOK_SECRET = config('RAZORPAY_WEBHOOK_SECRET', default='your-razorpay-webhook-secret')

STRIPE_PUBLISHABLE_KEY = config('STRIPE_PUBLISHABLE_KEY', default='pk_test_your-stripe-publishable-key')
STRIPE_SECRET_KEY = config('STRIPE_SECRET_KEY', default='sk_test_your-stripe-secret-key')
STRIPE_WEBHOOK_SECRET = config('STRIPE_WEBHOOK_SECRET', default='whsec_your-stripe-webhook-secret')

# Redis Configuration
REDIS_URL = config('REDIS_URL', default='redis://localhost:6379/0')
REDIS_HOST = config('REDIS_HOST', default='localhost')
REDIS_PORT = config('REDIS_PORT', default=6379, cast=int)
REDIS_DB = config('REDIS_DB', default=0, cast=int)

# Celery Configuration
CELERY_BROKER_URL = config('CELERY_BROKER_URL', default='redis://localhost:6379/0')
CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default='redis://localhost:6379/0')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

# Caching Configuration
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': REDIS_URL,
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
        'KEY_PREFIX': config('CACHE_KEY_PREFIX', default='therapy_mgmt'),
        'TIMEOUT': config('CACHE_TIMEOUT', default=3600, cast=int),
    }
}

# Session Configuration
SESSION_COOKIE_AGE = config('SESSION_COOKIE_AGE', default=86400, cast=int)  # 24 hours
SESSION_COOKIE_SECURE = config('SESSION_COOKIE_SECURE', default=False, cast=bool)
SESSION_COOKIE_HTTPONLY = config('SESSION_COOKIE_HTTPONLY', default=True, cast=bool)

# Security Settings
SECURE_SSL_REDIRECT = config('SECURE_SSL_REDIRECT', default=False, cast=bool)
SECURE_HSTS_SECONDS = config('SECURE_HSTS_SECONDS', default=0, cast=int)
SECURE_HSTS_INCLUDE_SUBDOMAINS = config('SECURE_HSTS_INCLUDE_SUBDOMAINS', default=False, cast=bool)
SECURE_HSTS_PRELOAD = config('SECURE_HSTS_PRELOAD', default=False, cast=bool)

# Google Services Configuration
GOOGLE_MEET_API_KEY = config('GOOGLE_MEET_API_KEY', default='your-google-meet-api-key')
GOOGLE_CLIENT_ID = config('GOOGLE_CLIENT_ID', default='your-google-client-id')
GOOGLE_CLIENT_SECRET = config('GOOGLE_CLIENT_SECRET', default='your-google-client-secret')
GOOGLE_CALENDAR_API_KEY = config('GOOGLE_CALENDAR_API_KEY', default='your-google-calendar-api-key')
GOOGLE_MAPS_API_KEY = config('GOOGLE_MAPS_API_KEY', default='your-google-maps-api-key')

# AI Services Configuration
GEMINI_API_KEY = config('GEMINI_API_KEY', default='your-gemini-api-key')
GEMINI_MODEL = config('GEMINI_MODEL', default='gemini-pro')
OPENAI_API_KEY = config('OPENAI_API_KEY', default='your-openai-api-key')
OPENAI_MODEL = config('OPENAI_MODEL', default='gpt-3.5-turbo')

# SMS Configuration
SMS_PROVIDER = config('SMS_PROVIDER', default='twilio')
TWILIO_ACCOUNT_SID = config('TWILIO_ACCOUNT_SID', default='your-twilio-account-sid')
TWILIO_AUTH_TOKEN = config('TWILIO_AUTH_TOKEN', default='your-twilio-auth-token')
TWILIO_PHONE_NUMBER = config('TWILIO_PHONE_NUMBER', default='+1234567890')

# Business Logic Configuration
DEFAULT_SESSION_DURATION = config('DEFAULT_SESSION_DURATION', default=60, cast=int)
MAX_SESSION_EXTENSIONS = config('MAX_SESSION_EXTENSIONS', default=3, cast=int)
SESSION_EXTENSION_DURATION = config('SESSION_EXTENSION_DURATION', default=10, cast=int)
SESSION_JOIN_WINDOW = config('SESSION_JOIN_WINDOW', default=5, cast=int)

MIN_ADVANCE_NOTICE_HOURS = config('MIN_ADVANCE_NOTICE_HOURS', default=48, cast=int)
MAX_ADVANCE_BOOKING_DAYS = config('MAX_ADVANCE_BOOKING_DAYS', default=30, cast=int)

MIN_CONSULTATION_FEE = config('MIN_CONSULTATION_FEE', default=500, cast=int)
MAX_CONSULTATION_FEE = config('MAX_CONSULTATION_FEE', default=50000, cast=int)
DEFAULT_CONSULTATION_FEE = config('DEFAULT_CONSULTATION_FEE', default=2500, cast=int)

# Feature Flags
ENABLE_COMPANY_PORTAL = config('ENABLE_COMPANY_PORTAL', default=True, cast=bool)
ENABLE_COUPON_SYSTEM = config('ENABLE_COUPON_SYSTEM', default=True, cast=bool)
ENABLE_GRIEVANCE_SYSTEM = config('ENABLE_GRIEVANCE_SYSTEM', default=True, cast=bool)
ENABLE_GEOTAGGING = config('ENABLE_GEOTAGGING', default=True, cast=bool)
ENABLE_AI_ASSISTANCE = config('ENABLE_AI_ASSISTANCE', default=True, cast=bool)
ENABLE_SESSION_RECORDING = config('ENABLE_SESSION_RECORDING', default=False, cast=bool)

# Platform Configuration
PLATFORM_NAME = config('PLATFORM_NAME', default='AmitaCare Therapy Platform')
PLATFORM_URL = config('PLATFORM_URL', default='https://therapy.amitacare.com')
SUPPORT_EMAIL = config('SUPPORT_EMAIL', default='support@amitacare.com')
SUPPORT_PHONE = config('SUPPORT_PHONE', default='+91-1234567890')

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': config('LOG_LEVEL', default='INFO'),
            'class': 'logging.FileHandler',
            'filename': config('LOG_FILE_PATH', default='logs/therapy_management.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': config('LOG_LEVEL', default='INFO'),
            'propagate': False,
        },
        'therapy_management': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

# Jazzmin Configuration
JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Therapy Management Admin",

    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "AmitaCare Admin",

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "AmitaCare",

    # Logo to use for your site, must be present in static files, used for brand on top left
    "site_logo": "admin/img/therapy_logo.png",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "admin/img/therapy_login_logo.png",

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": "admin/img/therapy_login_logo_dark.png",

    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle",

    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon": "admin/img/favicon.ico",

    # Welcome text on the login screen
    "welcome_sign": "Welcome to AmitaCare Therapy Management Platform",

    # Copyright on the footer
    "copyright": "AmitaCare Therapy Platform © 2025",

    # List of model admins to search from the search bar, search bar omitted if excluded
    "search_model": [
        "accounts.User", 
        "therapists.TherapistProfile", 
        "clients.ClientProfile",
        "sessions.TherapySession",
        "companies.Company"
    ],

    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
    "user_avatar": "profile_picture",

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
    "topmenu_links": [
        # Url that gets reversed (Permissions can be added)
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        
        # External url that opens in a new window
        {"name": "API Docs", "url": "/swagger/", "new_window": True},
        {"name": "Platform", "url": "/", "new_window": True},
        
        # Model admin to link to (Permissions checked against model)
        {"model": "accounts.User"},
        
        # App with dropdown menu to all its models pages
        {"app": "therapists"},
        {"app": "sessions"},
    ],

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right
    "usermenu_links": [
        {"name": "API Documentation", "url": "/swagger/", "new_window": True},
        {"name": "Support", "url": "mailto:support@amitacare.com", "new_window": True},
        {"model": "accounts.user"}
    ],

    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    "show_sidebar": True,

    # Whether to auto expand the menu
    "navigation_expanded": True,

    # Hide these apps when generating side menu
    "hide_apps": [],

    # Hide these models when generating side menu
    "hide_models": [],

    # List of apps (and/or models) to base side menu ordering off of
    "order_with_respect_to": [
        "accounts", 
        "therapists", 
        "clients", 
        "sessions", 
        "companies", 
        "payments", 
        "coupons",
        "communications",
        "grievances"
    ],

    # Custom links to append to app groups, keyed on app name
    "custom_links": {
        "therapists": [
            {
                "name": "Therapist Dashboard",
                "url": "/api/therapists/dashboard/",
                "icon": "fas fa-chart-line",
                "permissions": ["therapists.view_therapistprofile"]
            },
            {
                "name": "Generate Reports",
                "url": "admin:generate_therapist_reports",
                "icon": "fas fa-file-export",
                "permissions": ["therapists.view_therapistprofile"]
            }
        ],
        "sessions": [
            {
                "name": "Session Calendar",
                "url": "/api/sessions/therapist/calendar/",
                "icon": "fas fa-calendar-alt",
                "permissions": ["sessions.view_therapysession"]
            },
            {
                "name": "Session Statistics",
                "url": "/api/sessions/therapist/statistics/",
                "icon": "fas fa-chart-bar",
                "permissions": ["sessions.view_therapysession"]
            }
        ],
        "companies": [
            {
                "name": "Company Reports",
                "url": "admin:company_reports",
                "icon": "fas fa-building",
                "permissions": ["companies.view_company"]
            }
        ]
    },

    # Custom icons for side menu apps/models
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "accounts": "fas fa-user-circle",
        "accounts.User": "fas fa-user",
        "therapists": "fas fa-user-md",
        "therapists.TherapistProfile": "fas fa-user-md",
        "therapists.TherapyCategory": "fas fa-tags",
        "therapists.Competency": "fas fa-certificate",
        "therapists.TherapistDocument": "fas fa-file-medical",
        "therapists.TherapistAvailability": "fas fa-calendar-check",
        "therapists.TherapistReview": "fas fa-star",
        "clients": "fas fa-users",
        "clients.ClientProfile": "fas fa-user-injured",
        "clients.ClientConsent": "fas fa-file-signature",
        "clients.TestReport": "fas fa-file-medical-alt",
        "sessions": "fas fa-video",
        "sessions.TherapySession": "fas fa-video",
        "sessions.SessionTemplate": "fas fa-copy",
        "sessions.SessionFeedback": "fas fa-comment-medical",
        "sessions.SessionExtension": "fas fa-clock",
        "sessions.AvailabilitySlot": "fas fa-calendar-plus",
        "companies": "fas fa-building",
        "companies.Company": "fas fa-building",
        "companies.CompanyReport": "fas fa-chart-pie",
        "payments": "fas fa-credit-card",
        "payments.Payment": "fas fa-money-bill-wave",
        "coupons": "fas fa-ticket-alt",
        "coupons.CouponSystem": "fas fa-percentage",
        "coupons.IndividualCoupon": "fas fa-gift",
        "communications": "fas fa-envelope",
        "communications.EmailTemplate": "fas fa-envelope-open-text",
        "communications.EmailLog": "fas fa-paper-plane",
        "grievances": "fas fa-exclamation-triangle",
        "grievances.Grievance": "fas fa-flag",
    },

    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": True,

    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": "admin/css/custom_admin.css",
    "custom_js": "admin/js/custom_admin.js",
    
    # Whether to link font from fonts.googleapis.com (use custom_css to supply font otherwise)
    "use_google_fonts_cdn": True,
    
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": config('DEBUG', default=True, cast=bool),

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs
    "changeform_format": "horizontal_tabs",
    
    # Override change forms on a per modeladmin basis
    "changeform_format_overrides": {
        "accounts.user": "vertical_tabs",
        "therapists.therapistprofile": "horizontal_tabs",
        "clients.clientprofile": "horizontal_tabs",
        "sessions.therapysession": "collapsible",
        "companies.company": "vertical_tabs"
    },
    
    # Add a language dropdown into the admin
    "language_chooser": False,
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-primary",
    "accent": "accent-primary",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-primary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "actions_sticky_top": False
}

# Development Settings
if DEBUG:
    # Debug Toolbar
    if config('DEBUG_TOOLBAR_ENABLED', default=True, cast=bool):
        INSTALLED_APPS += ['debug_toolbar']
        MIDDLEWARE += ['debug_toolbar.middleware.DebugToolbarMiddleware']
        INTERNAL_IPS = ['127.0.0.1', 'localhost']
    
    # Development Email Backend
    if config('MOCK_EMAIL', default=False, cast=bool):
        EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
